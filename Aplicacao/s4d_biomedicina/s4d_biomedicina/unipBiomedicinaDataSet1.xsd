<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="unipBiomedicinaDataSet" targetNamespace="http://tempuri.org/unipBiomedicinaDataSet1.xsd" xmlns:mstns="http://tempuri.org/unipBiomedicinaDataSet1.xsd" xmlns="http://tempuri.org/unipBiomedicinaDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="unipBiomedicinaConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="unipBiomedicinaConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.s4d_biomedicina.Properties.Settings.GlobalReference.Default.unipBiomedicinaConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="examesAreasTableAdapter" GeneratorDataComponentClassName="examesAreasTableAdapter" Name="examesAreas" UserDataComponentName="examesAreasTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="unipBiomedicinaConnectionString1 (Settings)" DbObjectName="unipBiomedicina.dbo.examesAreas" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[examesAreas] WHERE (([idExameArea] = @Original_idExameArea) AND ((@IsNull_dsExameArea = 1 AND [dsExameArea] IS NULL) OR ([dsExameArea] = @Original_dsExameArea)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idExameArea" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idExameArea" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_dsExameArea" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dsExameArea" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dsExameArea" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dsExameArea" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[examesAreas] ([dsExameArea]) VALUES (@dsExameArea);
SELECT idExameArea, dsExameArea FROM examesAreas WHERE (idExameArea = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dsExameArea" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dsExameArea" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idExameArea, dsExameArea FROM dbo.examesAreas</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[examesAreas] SET [dsExameArea] = @dsExameArea WHERE (([idExameArea] = @Original_idExameArea) AND ((@IsNull_dsExameArea = 1 AND [dsExameArea] IS NULL) OR ([dsExameArea] = @Original_dsExameArea)));
SELECT idExameArea, dsExameArea FROM examesAreas WHERE (idExameArea = @idExameArea)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@dsExameArea" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dsExameArea" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idExameArea" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idExameArea" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_dsExameArea" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dsExameArea" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_dsExameArea" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="dsExameArea" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="idExameArea" ColumnName="idExameArea" DataSourceName="unipBiomedicina.dbo.examesAreas" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@idExameArea" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="idExameArea" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idExameArea" DataSetColumn="idExameArea" />
              <Mapping SourceColumn="dsExameArea" DataSetColumn="dsExameArea" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="unipBiomedicinaDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="unipBiomedicinaDataSet" msprop:Generator_UserDSName="unipBiomedicinaDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="examesAreas" msprop:Generator_TableClassName="examesAreasDataTable" msprop:Generator_TableVarName="tableexamesAreas" msprop:Generator_TablePropName="examesAreas" msprop:Generator_RowDeletingName="examesAreasRowDeleting" msprop:Generator_RowChangingName="examesAreasRowChanging" msprop:Generator_RowEvHandlerName="examesAreasRowChangeEventHandler" msprop:Generator_RowDeletedName="examesAreasRowDeleted" msprop:Generator_UserTableName="examesAreas" msprop:Generator_RowChangedName="examesAreasRowChanged" msprop:Generator_RowEvArgName="examesAreasRowChangeEvent" msprop:Generator_RowClassName="examesAreasRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idExameArea" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnidExameArea" msprop:Generator_ColumnPropNameInRow="idExameArea" msprop:Generator_ColumnPropNameInTable="idExameAreaColumn" msprop:Generator_UserColumnName="idExameArea" type="xs:int" />
              <xs:element name="dsExameArea" msprop:Generator_ColumnVarNameInTable="columndsExameArea" msprop:Generator_ColumnPropNameInRow="dsExameArea" msprop:Generator_ColumnPropNameInTable="dsExameAreaColumn" msprop:Generator_UserColumnName="dsExameArea" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:examesAreas" />
      <xs:field xpath="mstns:idExameArea" />
    </xs:unique>
  </xs:element>
</xs:schema>